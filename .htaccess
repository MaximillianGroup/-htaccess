# Apache Configuration File for WordPress (multisite) or PHP Application
# Author: MaximillianGroup (Max Barrett) <maximilliangroup@gmail.com>
# Version 1.0.0
# WordPress and WordPress Multisite, Cloudflare Origin Certificates, Let's Encrypt, Strong SSL Security
# Contact: support@maximilliangroup.us


# -------------------------------
# [CORE] Core settings
# -------------------------------
<IfModule mod_rewrite.c>
    
    # Disable server signature to prevent information disclosure
    ServerSignature Off

    # Set the timezone of the server
    # Set PHP timezone for Apache
    php_value date.timezone "UTC"
    # For non-PHP applications
    # Set server timezone environment variable
    SetEnv TZ "UTC"

    # Disable directory listing and unnecessary multi-view handling for security
    Options +FollowSymLinks -Indexes -MultiViews 

    # Secure directory by disabling script execution for certain file types
    AddHandler cgi-script .php .pl .py .jsp .asp .htm .shtml .sh .cgi
    Options -ExecCGI

    # DirectoryIndex: sets the file that Apache will serve if a directory is requested.
    DirectoryIndex index.html index.php /index.php 

    # Protect against DOS attacks by limiting file upload size (10MB)
    LimitRequestBody 10240000

    # DefaultType: the default MIME type the server will use for a document.
    DefaultType text/html
    
</IfModule>

# -------------------------------
# [8G FIREWALL] v1.3 20240222
# https://perishablepress.com/8g-firewall/
# -------------------------------
# 8G:[USER AGENT]
<IfModule mod_rewrite.c>

        RewriteCond %{HTTP_USER_AGENT} ([a-z0-9]{2000,}) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (&lt;|%0a|%0d|%27|%3c|%3e|%00|0x00|\\\x22) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (ahrefs|archiver|curl|libwww-perl|pycurl|scan) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (oppo\sa33|(c99|php|web)shell|site((.){0,2})copier) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (base64_decode|bin/bash|disconnect|eval|unserializ) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (acapbot|acoonbot|alexibot|asterias|attackbot|awario|backdor|becomebot|binlar|blackwidow|blekkobot|blex|blowfish|bullseye|bunnys|butterfly|careerbot|casper) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (checkpriv|cheesebot|cherrypick|chinaclaw|choppy|clshttp|cmsworld|copernic|copyrightcheck|cosmos|crescent|datacha|(\b)demon(\b)|diavol|discobot|dittospyder) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (dotbot|dotnetdotcom|dumbot|econtext|emailcollector|emailsiphon|emailwolf|eolasbot|eventures|extract|eyenetie|feedfinder|flaming|flashget|flicky|foobot|fuck) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (g00g1e|getright|gigabot|go-ahead-got|gozilla|grabnet|grafula|harvest|heritrix|httracks?|icarus6j|jetbot|jetcar|jikespider|kmccrew|leechftp|libweb|liebaofast) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (linkscan|linkwalker|loader|lwp-download|majestic|masscan|miner|mechanize|mj12bot|morfeus|moveoverbot|netmechanic|netspider|nicerspro|nikto|ninja|nominet|nutch) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (octopus|pagegrabber|petalbot|planetwork|postrank|proximic|purebot|queryn|queryseeker|radian6|radiation|realdownload|remoteview|rogerbot|scan|scooter|seekerspid) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (semalt|siclab|sindice|sistrix|sitebot|siteexplorer|sitesnagger|skygrid|smartdownload|snoopy|sosospider|spankbot|spbot|sqlmap|stackrambler|stripper|sucker|surftbot) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (sux0r|suzukacz|suzuran|takeout|teleport|telesoft|true_robots|turingos|turnit|vampire|vikspider|voideye|webleacher|webreaper|webstripper|webvac|webviewer|webwhacker) [NC,OR]
        RewriteCond %{HTTP_USER_AGENT} (winhttp|wwwoffle|woxbot|xaldon|xxxyy|yamanalab|yioopbot|youda|zeus|zmeu|zune|zyborg) [NC]

        RewriteRule .* - [F]

# RewriteRule .* /nG_log.php?log [END,NE,E=nG_USER_AGENT:%1]

</IfModule>
# 8G:[REMOTE HOST]
<IfModule mod_rewrite.c>

        RewriteCond %{REMOTE_HOST} (163data|amazonaws|colocrossing|crimea|g00g1e|justhost|kanagawa|loopia|masterhost|onlinehome|poneytel|sprintdatacenter|reverse.softlayer|safenet|ttnet|woodpecker|wowrack) [NC]

        RewriteRule .* - [F]

# RewriteRule .* /nG_log.php?log [END,NE,E=nG_REMOTE_HOST:%1]

</IfModule>
# 8G:[HTTP REFERRER]
<IfModule mod_rewrite.c>

        RewriteCond %{HTTP_REFERER} (order(\s|%20)by(\s|%20)1--) [NC,OR]
        RewriteCond %{HTTP_REFERER} (@unlink|assert\(|print_r\(|x00|xbshell) [NC,OR]
        RewriteCond %{HTTP_REFERER} (100dollars|best-seo|blue\spill|cocaine|ejaculat|erectile|erections|hoodia|huronriveracres|impotence|levitra|libido|lipitor|mopub\.com|phentermin) [NC,OR]
        RewriteCond %{HTTP_REFERER} (pornhelm|pro[sz]ac|sandyauer|semalt\.com|social-buttions|todaperfeita|tramadol|troyhamby|ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo) [NC]

        RewriteRule .* - [F]

# RewriteRule .* /nG_log.php?log [END,NE,E=nG_HTTP_REFERRER:%1]

</IfModule>
# 8G:[HTTP COOKIE]
<IfModule mod_rewrite.c>

        RewriteCond %{HTTP_COOKIE} (<|>|\'|%0A|%0D|%27|%3C|%3E|%00) [NC]

        RewriteRule .* - [F]

# RewriteRule .* /nG_log.php?log [END,NE,E=nG_HTTP_COOKIE:%1]

</IfModule>

# 8G:[REQUEST METHOD]
<IfModule mod_rewrite.c>

        RewriteCond %{REQUEST_METHOD} ^(connect|debug|move|trace|track) [NC]

        RewriteRule .* - [F]

# RewriteRule .* /nG_log.php?log [END,NE,E=nG_REQUEST_METHOD:%1]

</IfModule>

# --------------------------------
# [GZIP] GZIP Compression
# --------------------------------
<IfModule mod_deflate.c>

   # AddEncoding allows you to have certain browsers uncompress information on the fly. Note: Not all browsers support this.
   AddEncoding x-compress .Z
   AddEncoding x-gzip .gz .tgz

   AddOutputFilterByType DEFLATE text/html text/plain text/xml application/xml application/xhtml+xml text/javascript text/css application/x-javascript
   BrowserMatch ^Mozilla/4 gzip-only-text/html
   BrowserMatch ^Mozilla/4\.0[678] no-gzip
   BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    
    # Force deflate for mangled headers
    # developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
    <IfModule mod_setenvif.c>
	<IfModule mod_headers.c>
	    SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
	    RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
	</IfModule>
    </IfModule>


	<IfModule filter_module>
	    FilterDeclare COMPRESS
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/html
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/css
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/plain
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/xml
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/x-component
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/javascript
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/json
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xml
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xhtml+xml
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/rss+xml
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/atom+xml
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/vnd.ms-fontobject
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $image/svg+xml
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/x-font-ttf
	    FilterProvider  COMPRESS  DEFLATE resp=Content-Type $font/opentype
	    FilterChain COMPRESS
	    FilterProtocol COMPRESS DEFLATE change=yes;byteranges=no
	</IfModule>
</IfModule>

# -------------------------------------------
# [CACHE] Caching
# -------------------------------------------
<IfModule mod_expires.c>
  ExpiresActive on

# Perhaps better to whitelist expires rules? Perhaps.
  ExpiresDefault                          "access plus 1 month"

# cache.appcache needs re-requests in FF 3.6 (thx Remy ~Introducing HTML5)
  ExpiresByType text/cache-manifest       "access plus 0 seconds"

# Your document html
  ExpiresByType text/html                 "access plus 0 seconds"

# Data
  ExpiresByType text/xml                  "access plus 0 seconds"
  ExpiresByType application/xml           "access plus 0 seconds"
  ExpiresByType application/json          "access plus 0 seconds"

# RSS feed
  ExpiresByType application/rss+xml       "access plus 1 hour"

# Favicon (cannot be renamed)
  ExpiresByType image/x-icon              "access plus 1 year"

# Media: images, video, audio
  ExpiresByType image/gif                 "access plus 1 month"
  ExpiresByType image/png                 "access plus 1 month"
  ExpiresByType image/jpg                 "access plus 1 month"
  ExpiresByType image/jpeg                "access plus 1 month"
  ExpiresByType video/ogg                 "access plus 1 month"
  ExpiresByType audio/ogg                 "access plus 1 month"
  ExpiresByType video/mp4                 "access plus 1 month"
  ExpiresByType video/webm                "access plus 1 month"

# HTC files  (css3pie)
  ExpiresByType text/x-component          "access plus 1 month"

# Webfonts
  ExpiresByType font/truetype             "access plus 1 year"
  ExpiresByType font/opentype             "access plus 1 year"
  ExpiresByType application/x-font-woff   "access plus 1 year"
  ExpiresByType image/svg+xml             "access plus 1 year"
  ExpiresByType application/vnd.ms-fontobject "access plus 1 year"

# CSS and JavaScript
  ExpiresByType text/css                  "access plus 1 month"
  ExpiresByType application/javascript    "access plus 1 month"
  ExpiresByType text/javascript           "access plus 1 month"

  <IfModule mod_headers.c>
    Header append Cache-Control "public"
  </IfModule>

</IfModule>

# -------------------------------------------
# [HTTPS REWRITE] - HTTPS ALWAYS and ONLY
# -------------------------------------------
</IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /

  # Proxy server calls especially
  RewriteCond %{HTTPS} =on
  RewriteRule ^ - [E=PROTO:https]
  RewriteCond %{HTTPS} !=on
  RewriteRule ^ - [E=PROTO:http]

  RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  RewriteRule ^ %{ENV:PROTO}://%1%{REQUEST_URI} [R=301,L]

  # Rewrite to www dynamically
  RewriteCond %{REQUEST_URI} !^/robots\.txt$ [NC]
  RewriteCond %{HTTP_HOST} !^www\.[a-z-]+\.[a-z]{2,6} [NC]
  RewriteCond %{HTTP_HOST} ([a-z-]+\.[a-z]{2,6})$   [NC]
  RewriteRule ^/(.*)$ https://%1/$1 [R=301,L]

  ## DENY REQUEST BASED ON REQUEST METHOD
  RewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK|HEAD)$ [NC]
  RewriteRule ^.*$ - [F]

  # [SPELLCHECK] OPTIONAL - Enable automatic spelling correction for URLs
    <IfModule mod_speling.c>
        CheckSpelling On
    </IfModule>
	
</IfModule>

# -------------------------------------------
# [REWRITES] WordPress Multisite and other Application Rewrites
# -------------------------------------------

# --- WORDPRESS STANDARD ---
# BEGIN WordPress
	<IfModule mod_rewrite.c>
	    RewriteEngine On
	    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
	    RewriteBase /  # Or adjust to your WordPress subdirectory if applicable
	    RewriteRule ^index\.php$ - [L]
	    RewriteCond %{REQUEST_FILENAME} !-f
	    RewriteCond %{REQUEST_FILENAME} !-d
	    RewriteRule . /index.php [L]  # Or adjust path if in a subdirectory
	</IfModule>
# END WordPress

# --- WORDPRESS MULTISITE SUBFOLDER --- network type: https://wordpress.org/documentation/article/htaccess/#multisite
# BEGIN WordPress Multisite
    <IfModule mod_rewrite.c>
	#RewriteEngine On
	#RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
	#RewriteBase /
	#RewriteRule ^index\.php$ - [L]
	
	# add a trailing slash to /wp-admin
	#RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ $1wp-admin/ [R=301,L]
	
	#RewriteCond %{REQUEST_FILENAME} -f [OR]
	#RewriteCond %{REQUEST_FILENAME} -d
	#RewriteRule ^ - [L]
	#RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]
	#RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]
	#RewriteRule . index.php [L]
    </IfModule>
# END WordPress Multisite

# --- WORDPRESS MULTISITE SUBDOMAIN --- network type: https://wordpress.org/documentation/article/htaccess/#multisite
# BEGIN WordPress Multisite
    #<IfModule mod_rewrite.c>
	#RewriteEngine On
	#RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
	#RewriteBase /
	#RewriteRule ^index\.php$ - [L]
	
	# add a trailing slash to /wp-admin
	#RewriteRule ^wp-admin$ wp-admin/ [R=301,L]
	
	#RewriteCond %{REQUEST_FILENAME} -f [OR]
	#RewriteCond %{REQUEST_FILENAME} -d
	#RewriteRule ^ - [L]
	#RewriteRule ^(wp-(content|admin|includes).*) $1 [L]
	#RewriteRule ^(.*\.php)$ $1 [L]
	#RewriteRule . index.php [L]
    <IfModule>
# END WordPress Multisite

# --------------------------------
# [SECURITY REWRITE] - Final Security Rewrites
# --------------------------------
<IfModule mod_rewrite.c>

	# Hide php extention
	RewriteEngine On
	RewriteCond %{REQUEST_FILENAME}.php -f
	RewriteRule ^(.+)$ $1.php [L]


	# Redirect invalid requests to a custom error page
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteRule ^.*$ /error.html [L

</IfModule>

# --------------------------------
# [FILE BLOCK] - Block specific files from being accessed directly
# --------------------------------
<FilesMatch "\.(md|exe|sh|bak|inc|pot|po|mo|log|sql|htaccess|htpasswd|ini|phps|fla|psd|log|sh|cgi)$">
    Order Deny,Allow
    Deny from All
    Allow from env=REDIRECT_STATUS
</FilesMatch>
<FilesMatch "^(wp-config\.php|\.htaccess|\.htpasswd|debug\.log)$">
  Order Deny,Allow
  Deny from All
  Allow from env=REDIRECT_STATUS
</FilesMatch>

# Denies obvious trackback spam. See Holy Shmoly!
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP_USER_AGENT} ^.*(opera|mozilla|firefox|msie|safari).*$ [NC]
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.+/trackback/?\ HTTP/ [NC]
RewriteRule .? - [F,NS,L]


# Denies any comment attempt with a blank HTTP_REFERER field, highly indicative of spam. May prevent some visitors from POSTING.
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.*/wp-comments-post\.php.*\ HTTP/ [NC]
RewriteCond %{HTTP_REFERER} ^-?$
RewriteRule .? - [F,NS,L]

# Denies POST requests by blank user-agents. May prevent a small number of visitors from POSTING.
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP_USER_AGENT} ^-?$
RewriteCond %{REQUEST_URI} !^/(wp-login.php|wp-admin/|wp-content/plugins/|wp-includes/).* [NC]
RewriteRule .? - [F,NS,L]

# Denies obvious exploit using bogus graphics
RewriteCond %{HTTP:Content-Disposition} \.php [NC]
RewriteCond %{HTTP:Content-Type} image/.+ [NC]
RewriteRule .? - [F,NS,L]

# Denies requests that dont contain a HTTP HOST Header.
RewriteCond %{REQUEST_URI} !^/(wp-login.php|wp-admin/|wp-content/plugins/|wp-includes/).* [NC]
RewriteCond %{HTTP_HOST} ^$
RewriteRule .? - [F,NS,L]

Denies any POST request with a content type other than application/x-www-form-urlencoded|multipart/form-data
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP:Content-Type} !^(application/x-www-form-urlencoded|multipart/form-data.*(boundary.*)?)$ [NC]
RewriteCond %{REQUEST_URI} !^/(wp-login.php|wp-admin/|wp-content/plugins/|wp-includes/).* [NC]
RewriteRule .? - [F,NS,L]

# Denies any POST request that doesnt have a Content-Length Header
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP:Content-Length} ^$
RewriteCond %{REQUEST_URI} !^/(wp-admin/|wp-content/plugins/|wp-includes/).* [NC]
RewriteRule .? - [F,NS,L]

# Denies any request for a url containing characters other than "a-zA-Z0-9.+/-?=&" 
# REALLY helps but may break your site depending on your links.
RewriteCond %{REQUEST_URI} !^/(wp-login.php|wp-admin/|wp-content/plugins/|wp-includes/).* [NC]
RewriteCond %{THE_REQUEST} !^[A-Z]{3,9}\ [a-zA-Z0-9\.\+_/\-\?\=\&]+\ HTTP/ [NC]
RewriteRule .? - [F,NS,L]

# Block common exploit requests with 403 Forbidden. These can help alot, may break some plugins.
RewriteCond %{REQUEST_URI} !^/(wp-login.php|wp-admin/|wp-content/plugins/|wp-includes/).* [NC]
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ ///.*\ HTTP/ [NC,OR]
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.*\?\=?(http|ftp|ssl|https):/.*\ HTTP/ [NC,OR]
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.*\?\?.*\ HTTP/ [NC,OR]
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.*\.(asp|ini|dll).*\ HTTP/ [NC,OR]
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.*\.(htpasswd|htaccess|aahtpasswd).*\ HTTP/ [NC]
RewriteRule .? - [F,NS,L]

# Denies any POST attempt made to a non-existing wp-comments-post.php
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.*/wp-comments-post\.php.*\ HTTP/ [NC]
RewriteRule .? - [F,NS,L]

### ALTERNATATIVE TO USING ERRORDOCUMENT
# https://www.htaccesselite.com/d/htaccess-errordocument-examples-vt11.html
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^.*$ /error.php [L]

# --------------------------------
# [HEADERS] 
# --------------------------------
<IfModule mod_headers.c>
	Header set Content-Language "en-US"

	# Reinforce file type and charset
	AddDefaultCharset UTF-8
	AddType 'text/html; charset=UTF-8' .html
	AddCharset UTF-8 .html .php

        # remove server information for security protection
        Header unset Server	
	# remove other headers which indicate plugins
	Header always unset WP-Super-Cache
	
	# XMLRPC Pingback
	Header always unset X-Pingback
	Header set X-Pingback "https://example.com/xmlrpc.php"
	
        # Content Security policy and Feature Policy
        Header always set Content-Security-Policy "default-src 'self'"
        # OR
        #Header set Content-Security-Policy "default-src * data:; script-src https: 'unsafe-inline' 'unsafe-eval'; style-src https: 'unsafe-inline'"
  
        #Header set Feature-Policy "camera '*'; fullscreen '*'; geolocation *; microphone '*'; autoplay *"

        # --------------------------------
	# [CORS]
	# --------------------------------
	# OPTIONS Enable Cors - uncomment one option

        # OPTION 1
	Header add Access-Control-Allow-Origin "*" 

        # OPTION 2 
        # Capture the current request's origin domain dynamically
	<IfModule mod_setenvif.c>

        	SetEnvIf Origin "^https?://(.*)$" OriginHeader=$0
    
	        # Apply Access-Control-Allow-Origin dynamically based on the Origin header
	        Header always set Access-Control-Allow-Origin %{OriginHeader}e env=OriginHeader

		# There is a security reason for this I forgot from Mozilla
		<FilesMatch "\.(bmp|cur|gif|ico|jpe?g|a?png|svgz?|webp|heic|heif|avif)$">
		   SetEnvIf Origin ":" IS_CORS
		   Header set Access-Control-Allow-Origin "*" env=*IS_CORS*
		</FilesMatch>
	</IfModule>

	## Pre-check Handling Options for the CORS
        <IfModules mod_rewrite.c>

          ## Allows for Pre-check to setup CORS requests
          RewriteCond %{REQUEST_METHOD} OPTIONS
          RewriteRule ^(.*)$ $1 [L,R=204]
        <IfModules>

	# Specify the CORS Headers
        Header set Access-Control-Allow-Methods "GET,PUT,POST,OPTIONS" # Add DELETE if needed
        Header set Access-Control-Allow-Headers "Content-Type, Authorization, X-Custom-Header,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,C$" Upgrade-Insecure-Requests
        Header always set Access-Control-Allow-Credentials true
        Access-Control-Max-Age: 1728000

	Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        ## Always set Secure Cookies
        Header always edit Set-Cookie (.*) "$1, Secure; httponly"

        Header set Referrer-Policy "no-referrer, strict-origin-when-cross-origin"
	Header always set Expect-CT "enforce, max-age=0"

	# Allow timing
 	Header set Timing-Allow-Origin: "*"
      
  	# Set Security Headers
        Header set X-Content-Type-Options "nosniff"
        Header set X-XSS-Protection "1; mode=block"
        Header set Referrer-Policy "no-referrer, strict-origin-when-cross-origin"
        Header set X-Frame-Options "SAMEORIGIN"
        Header set X-Permitted-Cross-Domain-Policies "none"

	# For fonts set any origin
	<FilesMatch "\.(eot|otf|tt[cf]|woff2?)$">
	  Header set Access-Control-Allow-Origin "*"
	</FilesMatch>
	
	Header always set Expect-CT "enforce, max-age=0"
        # FileETag None is not enough for every server.
        Header unset ETag
        # Since we`re sending far-future expires, we don't need ETags for static content.
        # developer.yahoo.com/performance/rules.html#etags
        FileETag None

	# --------------------------------
	# COOP and COEP - independent of eachother, can be tested and deployed separately.
	# --------------------------------
	# "When set together on a top-level document, COEP and COOP ensure that neither the document
	# nor any of its descendents can load resources which haven't opted in, and that navigations 
	# to any top-level document that doesn't both come from the same origin and set COEP will be 
	# performed in a new browsing context group (and consequently, different process)."
	# CITE - https://docs.google.com/document/d/1zDlfvfTJ_9e8Jdc8ehuV4zMEu9ySMCiTGMS9y0GU92k/edit?pli=1&tab=t.0
	# READ - https://resourcepolicy.fyi/

	# [COOP]
	# See Mozilla  - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy
	#Header set Cross-Origin-Opener-Policy: same-origin-allow-popups; report-to="https://domain.com/reports/"
	
	# [COEP]
	# See Mozilla - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy
	#Header set Cross-Origin-Embedder-Policy: require-corp; report-to="https://domain.com/reports/"

	# Developers can detect whether the headers are set correctly and they are in a COOP plus COEP 
	# environment through the self.crossOriginIsolated API.
  
</IfModule>

# END
